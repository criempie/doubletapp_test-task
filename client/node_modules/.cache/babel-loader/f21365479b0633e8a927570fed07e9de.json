{"ast":null,"code":"var _jsxFileName = \"/home/crimemp/Documents/GitHub/doubletapp_test-task/client/src/Form/index.js\";\nimport React, { Component } from 'react';\nimport AvatarChange from '../AvatarChange/index.js';\nimport InputText from '../InputText/index.js';\nimport CustomSelect from '../CustomSelect/CustomSelect.js';\nimport ColorSelect from '../CustomSelect/ColorSelect.js';\nimport Button from '../Button/index.js';\nimport './index.css';\n\nclass Form extends Component {\n  constructor(props) {\n    super(props); // let studentSchema = mongoose.Schema({\n    // \t_id: mongoose.Schema.Types.ObjectId,\n    // \tfullname: String,\n    // \tspecialty: String,\n    // \tgroup: String,\n    // \tage: Number,\n    // \trating: Number,\n    // \tcolor: String,\n    // });\n    // let Student = mongoose.model('Student', studentSchema);\n    // let student = new Student();\n\n    this.getValue = (stateName = null, value = null) => {\n      this.setState({\n        [stateName]: value\n      });\n    };\n\n    this.getValue = this.getValue.bind(this);\n  }\n\n  async sendPostRequest(data) {\n    const response = await fetch(\"/\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json' //   'Content-Type': 'multipart/form-data',\n        //   'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      body: JSON.stringify(data)\n    });\n    console.log(\"sending student data: \", data);\n    return response;\n  }\n\n  sendPostRequestImage(data) {\n    fetch('/', {\n      method: 'POST',\n      body: data\n    }); // const response = fetch('/upload', {\n    // \tmethod: 'POST',\n    // \tbody: data,\n    // });\n    // return response;\n  } // groupData(formData, data) {\n  // \tfor (let key in data) {\n  // \t\tformData.append(key, data[key]);\n  // \t}\n  // }\n\n\n  sendRequest(studentData) {\n    let formData = new FormData(); // this.groupData(formData, studentData);\n    // this.groupData(formData, imageData);\n\n    console.log('state: ', this.state);\n\n    for (let key in studentData) {\n      // if (key == 'avatar') {\n      // \tlet fileName = studentData['email'] + Date.now().toString();\n      // \tconsole.log(fileName);\n      // \tformData.append(key, studentData[key], fileName);\n      // \tcontinue;\n      // }\n      formData.append(key, studentData[key]);\n      console.log(formData);\n    }\n\n    console.log('formdata: ', formData);\n    fetch('/', {\n      method: 'POST',\n      body: formData\n    });\n  }\n\n  render() {\n    let specialtyOptions = [\"Прикладная информатика\", \"Прикладная математика\", \"Механика\", \"Математика\", \"Компьютерные науки\", \"Фундаметальная информатика\"];\n    let groupOptions = {\n      \"Прикладная информатика\": ['ПИ-101', 'ПИ-102', 'ПИ-201', 'ПИ-213'],\n      \"Прикладная математика\": ['ПМ-101', 'ПМ-102', 'ПМ-201', 'ПМ-213'],\n      \"Механика\": ['МХ-101', 'МХ-102', 'МХ-201', 'МХ-213'],\n      \"Математика\": ['МТ-101', 'МТ-102', 'МТ-201', 'МТ-213'],\n      \"Компьютерные науки\": ['КН-101', 'КН-102', 'КН-201', 'КН-213'],\n      \"Фундаметальная информатика\": ['ФИИТ-101', 'ФИИТ-102', 'ФИИТ-201', 'ФИИТ-213']\n    };\n    let colorsOptions = ['#49C2E8', '#E25B5B', '#83C872', '#F7FB53', '#000000', '#EFA638', '#rainbow'];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"avatarchange-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AvatarChange, {\n      getValue: this.getValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputs-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(InputText, {\n      label: \"\\u0424\\u0418\\u041E\",\n      name: \"fullname\",\n      placeholder: \"\\u0418\\u0432\\u0430\\u043D\\u043E\\u0432 \\u0418\\u0432\\u0430\\u043D \\u0418\\u0432\\u0430\\u043D\\u043E\\u0432\\u0438\\u0447\",\n      getValue: this.getValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      label: \"Email\",\n      name: \"email\",\n      placeholder: \"ivanov@gmail.com\",\n      getValue: this.getValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      label: \"\\u0412\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\",\n      name: \"age\",\n      placeholder: \"20\",\n      getValue: this.getValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(CustomSelect, {\n      label: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0430\",\n      name: \"group\",\n      options: [1, 2],\n      value: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\",\n      getValue: this.getValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(CustomSelect, {\n      label: \"\\u0421\\u043F\\u0435\\u0446\\u0438\\u0430\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u044C\",\n      name: \"specialty\",\n      options: specialtyOptions,\n      value: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\",\n      getValue: this.getValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(InputText, {\n      label: \"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433\",\n      name: \"rating\",\n      placeholder: \"0\",\n      getValue: this.getValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(CustomSelect, {\n      label: \"\\u041F\\u043E\\u043B\",\n      name: \"sex\",\n      value: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\",\n      options: [1, 2],\n      getValue: this.getValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(ColorSelect, {\n      label: \"\\u041B\\u044E\\u0431\\u0438\\u043C\\u044B\\u0439 \\u0446\\u0432\\u0435\\u0442\",\n      name: \"color\",\n      value: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\",\n      options: colorsOptions,\n      type: \"colorSelect\",\n      getValue: this.getValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      label: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C\",\n      OnClick: () => {\n        //this.sendPostRequest(this.state);\n        //this.sendPostRequestImage(this.state.avatar);\n        this.sendRequest(this.state);\n        this.props.func();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/home/crimemp/Documents/GitHub/doubletapp_test-task/client/src/Form/index.js"],"names":["React","Component","AvatarChange","InputText","CustomSelect","ColorSelect","Button","Form","constructor","props","getValue","stateName","value","setState","bind","sendPostRequest","data","response","fetch","method","headers","body","JSON","stringify","console","log","sendPostRequestImage","sendRequest","studentData","formData","FormData","state","key","append","render","specialtyOptions","groupOptions","colorsOptions","func"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AvatarChange from '../AvatarChange/index.js';\nimport InputText from '../InputText/index.js';\nimport CustomSelect from '../CustomSelect/CustomSelect.js';\nimport ColorSelect from '../CustomSelect/ColorSelect.js';\nimport Button from '../Button/index.js';\nimport './index.css';\n\nclass Form extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\t// let studentSchema = mongoose.Schema({\n\t\t// \t_id: mongoose.Schema.Types.ObjectId,\n\t\t// \tfullname: String,\n\t\t// \tspecialty: String,\n\t\t// \tgroup: String,\n\t\t// \tage: Number,\n\t\t// \trating: Number,\n\t\t// \tcolor: String,\n\t\t// });\n\t\t\n\t\t// let Student = mongoose.model('Student', studentSchema);\n\t\t// let student = new Student();\n\n\t\tthis.getValue = this.getValue.bind(this);\n\t\t\n\t}\n\n\tgetValue = (stateName=null, value=null) => {\n\t\tthis.setState({[stateName]: value});\n\t}\n\t\n\tasync sendPostRequest(data) {\n\t\tconst response = await fetch(\"/\", {\n\t\t\tmethod: 'POST', \n\t\t\theaders: {\n\t\t\t  'Content-Type': 'application/json',\n\t\t\t//   'Content-Type': 'multipart/form-data',\n\t\t\t//   'Content-Type': 'application/x-www-form-urlencoded',\n\t\t\t},\n\t\t\tbody: JSON.stringify(data),\n\t\t  });\t\n\n\t\tconsole.log(\"sending student data: \", data)\n\t\treturn response;\n\t}\n\n\tsendPostRequestImage(data) {\n\t\tfetch('/', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: data,\n\t\t});\n\n\t\t// const response = fetch('/upload', {\n\t\t// \tmethod: 'POST',\n\t\t// \tbody: data,\n\t\t// });\n\n\t\t// return response;\n\t}\n\n\t// groupData(formData, data) {\n\t// \tfor (let key in data) {\n\t// \t\tformData.append(key, data[key]);\n\t// \t}\n\t// }\n\n\tsendRequest(studentData) {\n\t\tlet formData = new FormData();\n\t\t// this.groupData(formData, studentData);\n\t\t// this.groupData(formData, imageData);\n\n\t\tconsole.log('state: ', this.state);\n\n\t\tfor (let key in studentData) {\n\t\t\t// if (key == 'avatar') {\n\n\t\t\t// \tlet fileName = studentData['email'] + Date.now().toString();\n\t\t\t// \tconsole.log(fileName);\n\n\t\t\t// \tformData.append(key, studentData[key], fileName);\n\t\t\t// \tcontinue;\n\t\t\t// }\n\n\t\t\tformData.append(key, studentData[key]);\n\t\t\tconsole.log(formData);\n\t\t}\n\n\t\tconsole.log('formdata: ', formData);\n\n\t\tfetch('/', {\n\t\t\tmethod: 'POST',\n\t\t\tbody: formData,\n\t\t});\n\t}\n\n\t\n\n\trender() {\n\t\tlet specialtyOptions = [\n\t\t\t\"Прикладная информатика\",\n\t\t\t\"Прикладная математика\",\n\t\t\t\"Механика\", \n\t\t\t\"Математика\",\n\t\t\t\"Компьютерные науки\",\n\t\t\t\"Фундаметальная информатика\",\n\t\t];\n\n\t\tlet groupOptions = {\n\t\t\t\"Прикладная информатика\": ['ПИ-101', 'ПИ-102', 'ПИ-201', 'ПИ-213'],\n\t\t\t\"Прикладная математика\": ['ПМ-101', 'ПМ-102', 'ПМ-201', 'ПМ-213'],\n\t\t\t\"Механика\": ['МХ-101', 'МХ-102', 'МХ-201', 'МХ-213'],\n\t\t\t\"Математика\": ['МТ-101', 'МТ-102', 'МТ-201', 'МТ-213'],\n\t\t\t\"Компьютерные науки\": ['КН-101', 'КН-102', 'КН-201', 'КН-213'],\n\t\t\t\"Фундаметальная информатика\": ['ФИИТ-101', 'ФИИТ-102', 'ФИИТ-201', 'ФИИТ-213'],\n\t\t};\n\n\t\tlet colorsOptions = [\n\t\t\t'#49C2E8',\n\t\t\t'#E25B5B',\n\t\t\t'#83C872',\n\t\t\t'#F7FB53',\n\t\t\t'#000000',\n\t\t\t'#EFA638',\n\t\t\t'#rainbow',\n\t\t];\n\t\t  \n\t\treturn (\n\t\t\t<div>\n\t\t\n\t\t\t\t<div className=\"avatarchange-container\">\n\t\t\t\t\t<AvatarChange getValue={this.getValue} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"inputs-container\">\n\t\t\t\t\t<InputText label=\"ФИО\" name=\"fullname\" placeholder=\"Иванов Иван Иванович\" getValue={this.getValue}/>\n\t\t\t\t\t<InputText label=\"Email\" name =\"email\" placeholder=\"ivanov@gmail.com\" getValue={this.getValue}/>\n\t\t\t\t\t<InputText label=\"Возраст\" name=\"age\" placeholder=\"20\" getValue={this.getValue}/>\n\t\t\t\t\t<CustomSelect label=\"Группа\" name=\"group\" options={[1, 2]} value=\"Выбрать\" getValue={this.getValue}/>\n\t\t\t\t\t<CustomSelect label=\"Специальность\" name=\"specialty\" options={specialtyOptions} value=\"Выбрать\" getValue={this.getValue}/>\n\t\t\t\t\t<InputText label=\"Рейтинг\" name=\"rating\" placeholder=\"0\" getValue={this.getValue}/>\n\t\t\t\t\t<CustomSelect label=\"Пол\" name=\"sex\" value=\"Выбрать\" options={[1, 2]} getValue={this.getValue}/>\n\t\t\t\t\t<ColorSelect label=\"Любимый цвет\" name=\"color\" value=\"Выбрать\" options={colorsOptions} type=\"colorSelect\" getValue={this.getValue}/>\t\n\t\t\t\t</div>\n\n\t\t\t\t<Button label=\"Создать\" OnClick={() => {//this.sendPostRequest(this.state);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//this.sendPostRequestImage(this.state.avatar);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.sendRequest(this.state);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.func()}} />\n\t\t\n\t\t\t</div>\n\n\t\t);\n\t}\n\n\n\n}\n\nexport default Form"]},"metadata":{},"sourceType":"module"}