{"ast":null,"code":"var _jsxFileName = \"/home/crimemp/Documents/GitHub/doubletapp_test-task/client/src/CustomSelect/CustomSelect.js\";\nimport React, { Component } from 'react';\nimport './CustomSelect.css';\n\nclass CustomSelect extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.getLabel = () => /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 19\n      }\n    }, this.state.label);\n\n    this.switchVisibility = () => this.setState({\n      isOpen: !this.state.isOpen\n    });\n\n    this.setHidden = () => this.setState({\n      isOpen: false\n    });\n\n    this.setShown = () => this.setState({\n      isOpen: true\n    });\n\n    this.selectOption = (option, id, props) => {\n      this.setState({\n        selected: option,\n        selectedID: id\n      });\n      props.sendState(this.state.name, option);\n    };\n\n    this.state = {\n      label: _props.label,\n      name: _props.name,\n      options: _props.options || [],\n      selected: _props.selected,\n      isOpen: false,\n      selectedID: -1,\n      typeSelect: _props.type || \"classic\",\n      customStyle: _props.style || null\n    };\n    let sendState = _props.getState;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 4\n      }\n    }, this.state.label ? this.getLabel() : null, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"custom-select\",\n      onClick: this.switchVisibility,\n      onBlur: () => setTimeout(this.setHidden, 200),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }\n    }, this.state.selected)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options-container\",\n      style: {\n        display: this.state.isOpen ? \"grid\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }\n    }, this.getOptions()));\n  }\n\n  getOptions() {\n    let optionsArray = [];\n\n    for (let id in this.state.options) {\n      let temp = [];\n      temp = [/*#__PURE__*/React.createElement(\"input\", {\n        id: id,\n        className: \"option-input\",\n        type: \"radio\",\n        value: this.state.options.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: id,\n        className: \"option-label\",\n        onClick: () => this.selectOption(this.state.options[id], id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 5\n        }\n      }, this.state.options[id], this.setCheck(id))];\n      optionsArray = optionsArray.concat(temp);\n    }\n\n    return optionsArray;\n  }\n\n  setCheck(id) {\n    if (this.state.selectedID == id) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        id: \"checked\",\n        src: \"./images/selected.svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      });\n    }\n  }\n\n}\n\nexport default CustomSelect;","map":{"version":3,"sources":["/home/crimemp/Documents/GitHub/doubletapp_test-task/client/src/CustomSelect/CustomSelect.js"],"names":["React","Component","CustomSelect","constructor","props","getLabel","state","label","switchVisibility","setState","isOpen","setHidden","setShown","selectOption","option","id","selected","selectedID","sendState","name","options","typeSelect","type","customStyle","style","getState","render","setTimeout","display","getOptions","optionsArray","temp","setCheck","concat"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './CustomSelect.css';\n\nclass CustomSelect extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tlabel: props.label,\n\t\t\tname: props.name,\n\t\t\toptions: props.options || [],\n\t\t\tselected: props.selected,\n\t\t\tisOpen: false,\n\t\t\tselectedID: -1,\n\t\t\ttypeSelect: props.type || \"classic\",\n\t\t\tcustomStyle: props.style || null,\n\t\t}\n\n\t\tlet sendState = props.getState;\n\t}\n\n\t\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"input-container\">\n\t\t\t\t{this.state.label ? this.getLabel() : null}\n\t\t\t\t<button className=\"custom-select\" onClick={this.switchVisibility} \n\t\t\t\t\t\t\t\t\t\t\t\t  onBlur={() => setTimeout(this.setHidden, 200)}>\n\t\t\t\t\t<span>{this.state.selected}</span>\n\t\t\t\t</button>\n\t\t\t\t<div className=\"options-container\" style={{display: this.state.isOpen ? \"grid\" : \"none\"}}>\n\t\t\t\t\t{this.getOptions()}\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t);\n\t}\n\t \n\tgetLabel = () => <h4>{this.state.label}</h4>;\n\n\tswitchVisibility = () => this.setState({isOpen: !this.state.isOpen});\n\n\tsetHidden = () => this.setState({isOpen: false});\n\tsetShown = () => this.setState({isOpen: true});\n\n\tgetOptions() {\n\t\tlet optionsArray = [];\n\t\tfor (let id in this.state.options) {\n\t\t\tlet temp = [];\n\t\t\ttemp = [\n\t\t\t\t<input id={id} className=\"option-input\" type=\"radio\" value={this.state.options.id}></input>,\n\t\t\t\t<label htmlFor={id} className=\"option-label\" onClick={() => this.selectOption(this.state.options[id], id)} >\n\t\t\t\t\t{this.state.options[id]}\n\t\t\t\t\t{this.setCheck(id)}\n\t\t\t\t\t</label>\n\t\t\t];\n\n\t\t\toptionsArray = optionsArray.concat(temp);\n\t\t}\n\t\treturn optionsArray;\n\t}\n\n\t\n\n\tselectOption = (option, id, props) => {\n\t\tthis.setState({selected: option, selectedID: id});\n\t\tprops.sendState(this.state.name, option);\n\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tsetCheck(id) {\n\t\tif (this.state.selectedID == id) {\n\t\t\treturn <img id=\"checked\" src=\"./images/selected.svg\"></img>\n\t\t}\n\t}\t\t\t\t\t\t\t\t\t\t\t\n\n}\n\nexport default CustomSelect\t"]},"metadata":{},"sourceType":"module"}