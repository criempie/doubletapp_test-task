{"ast":null,"code":"var _jsxFileName = \"/home/crimemp/Documents/GitHub/doubletapp_test-task/client/src/CustomSelect/ColorSelect.js\";\nimport React from 'react';\nimport './CustomSelect.css';\nimport CustomSelect from './CustomSelect.js';\n\nclass ColorSelect extends CustomSelect {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: props.name,\n      options: props.options,\n      label: props.label,\n      selected: props.selected,\n      selectedID: -1,\n      isOpen: false\n    };\n  }\n\n  render(props) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 4\n      }\n    }, this.state.label ? this.getLabel() : null, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"custom-select\",\n      onClick: this.switchVisibility,\n      onBlur: () => setTimeout(this.setHidden, 200),\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }, this.state.selected)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colors-container\",\n      style: {\n        display: this.state.isOpen ? \"grid\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, this.getOptions()));\n  }\n\n  getOptions() {\n    let optionsArray = [];\n\n    for (let color of this.state.options) {\n      let id = btoa(encodeURIComponent(color));\n      let temp = [];\n      temp = [/*#__PURE__*/React.createElement(\"input\", {\n        id: id,\n        className: \"option-input\",\n        type: \"radio\",\n        value: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"option-color\",\n        htmlFor: id,\n        onClick: () => this.selectOption(color, id),\n        style: {\n          backgroundColor: color\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }\n      })];\n      optionsArray = optionsArray.concat(temp);\n    }\n\n    return optionsArray;\n  }\n\n}\n\nexport default ColorSelect;","map":{"version":3,"sources":["/home/crimemp/Documents/GitHub/doubletapp_test-task/client/src/CustomSelect/ColorSelect.js"],"names":["React","CustomSelect","ColorSelect","constructor","props","state","name","options","label","selected","selectedID","isOpen","render","getLabel","switchVisibility","setTimeout","setHidden","handleChange","display","getOptions","optionsArray","color","id","btoa","encodeURIComponent","temp","selectOption","backgroundColor","concat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,MAAMC,WAAN,SAA0BD,YAA1B,CAAuC;AACtCE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACZC,MAAAA,IAAI,EAAEF,KAAK,CAACE,IADA;AAEZC,MAAAA,OAAO,EAAEH,KAAK,CAACG,OAFH;AAGZC,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAHD;AAIZC,MAAAA,QAAQ,EAAEL,KAAK,CAACK,QAJJ;AAKZC,MAAAA,UAAU,EAAE,CAAC,CALD;AAMZC,MAAAA,MAAM,EAAE;AANI,KAAb;AASA;;AAEDC,EAAAA,MAAM,CAACR,KAAD,EAAQ;AACb,wBACC;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKC,KAAL,CAAWG,KAAX,GAAmB,KAAKK,QAAL,EAAnB,GAAqC,IADvC,eAEC;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKC,gBAAlD;AACS,MAAA,MAAM,EAAE,MAAMC,UAAU,CAAC,KAAKC,SAAN,EAAiB,GAAjB,CADjC;AAES,MAAA,QAAQ,EAAE,KAAKC,YAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKZ,KAAL,CAAWI,QAAlB,CAHD,CAFD,eAOC;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,KAAK,EAAE;AAACS,QAAAA,OAAO,EAAE,KAAKb,KAAL,CAAWM,MAAX,GAAoB,MAApB,GAA6B;AAAvC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKQ,UAAL,EADF,CAPD,CADD;AAaA;;AAEDA,EAAAA,UAAU,GAAG;AACZ,QAAIC,YAAY,GAAG,EAAnB;;AACA,SAAK,IAAIC,KAAT,IAAkB,KAAKhB,KAAL,CAAWE,OAA7B,EAAsC;AACrC,UAAIe,EAAE,GAAGC,IAAI,CAACC,kBAAkB,CAACH,KAAD,CAAnB,CAAb;AACA,UAAII,IAAI,GAAG,EAAX;AACAA,MAAAA,IAAI,GAAG,cACN;AAAO,QAAA,EAAE,EAAEH,EAAX;AAAe,QAAA,SAAS,EAAC,cAAzB;AAAwC,QAAA,IAAI,EAAC,OAA7C;AAAqD,QAAA,KAAK,EAAED,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,eAEN;AAAK,QAAA,SAAS,EAAC,cAAf;AAA8B,QAAA,OAAO,EAAEC,EAAvC;AAA2C,QAAA,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkBL,KAAlB,EAAyBC,EAAzB,CAA1D;AAAyF,QAAA,KAAK,EAAE;AAACK,UAAAA,eAAe,EAAEN;AAAlB,SAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFM,CAAP;AAKAD,MAAAA,YAAY,GAAGA,YAAY,CAACQ,MAAb,CAAoBH,IAApB,CAAf;AACA;;AACD,WAAOL,YAAP;AACA;;AA5CqC;;AA+CvC,eAAelB,WAAf","sourcesContent":["import React from 'react';\nimport './CustomSelect.css';\nimport CustomSelect from './CustomSelect.js';\n\nclass ColorSelect extends CustomSelect {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tname: props.name,\n\t\t\toptions: props.options,\n\t\t\tlabel: props.label,\n\t\t\tselected: props.selected,\n\t\t\tselectedID: -1,\n\t\t\tisOpen: false,\n\t\t}\n\n\t}\n\n\trender(props) {\n\t\treturn (\n\t\t\t<div className=\"input-container\">\n\t\t\t\t{this.state.label ? this.getLabel() : null}\n\t\t\t\t<button className=\"custom-select\"   onClick={this.switchVisibility} \n\t\t\t\t\t\t\t\t\t\t\t\t\tonBlur={() => setTimeout(this.setHidden, 200)}\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}>\n\t\t\t\t\t<span>{this.state.selected}</span>\n\t\t\t\t</button>\n\t\t\t\t<div className=\"colors-container\" style={{display: this.state.isOpen ? \"grid\" : \"none\"}}>\n\t\t\t\t\t{this.getOptions()}\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t);\n\t}\n\n\tgetOptions() {\n\t\tlet optionsArray = [];\n\t\tfor (let color of this.state.options) {\n\t\t\tlet id = btoa(encodeURIComponent(color));\n\t\t\tlet temp = [];\n\t\t\ttemp = [\n\t\t\t\t<input id={id} className=\"option-input\" type=\"radio\" value={color}></input>,\n\t\t\t\t<div className=\"option-color\" htmlFor={id} onClick={() => this.selectOption(color, id)}  style={{backgroundColor: color}}></div>\n\t\t\t];\n\n\t\t\toptionsArray = optionsArray.concat(temp);\n\t\t}\n\t\treturn optionsArray;\n\t}\n}\n\nexport default ColorSelect"]},"metadata":{},"sourceType":"module"}