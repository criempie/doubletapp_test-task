{"ast":null,"code":"var _jsxFileName = \"/home/crimemp/Documents/GitHub/doubletapp_test-task/src/InputSelect/index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\n\nclass InputSelect extends Component {\n  constructor(props) {\n    super(props);\n\n    this.switchVisibility = () => this.setState({\n      isOpen: !this.state.isOpen\n    });\n\n    this.selectOption = (option, id) => this.setState({\n      selected: option,\n      selectedID: id\n    });\n\n    this.state = {\n      label: this.props.label,\n      options: this.props.options,\n      selected: this.props.selected,\n      isOpen: false,\n      selectedID: -1\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }\n    }, this.state.label), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"custom-select\",\n      onClick: this.switchVisibility,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, this.state.selected), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"options-container\",\n      style: {\n        display: this.state.isOpen ? \"grid\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }\n    }, this.getOptions()));\n  }\n\n  getOptions() {\n    let optionsArray = [];\n\n    for (let id in this.state.options) {\n      let temp = [];\n      temp = [/*#__PURE__*/React.createElement(\"input\", {\n        id: id,\n        className: \"option-input\",\n        type: \"radio\",\n        value: this.state.options.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: id,\n        className: \"option-label\",\n        onClick: (() => this.selectOption(this.state.options[id]), id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }\n      }, this.state.options[id], this.setCheck)];\n      optionsArray = optionsArray.concat(temp);\n    }\n\n    return optionsArray;\n  }\n\n  setCheck() {\n    if (this.state.selectedID != -1) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        id: \"checked\",\n        src: \"./images/selected.svg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      });\n    }\n  }\n\n}\n\nexport default InputSelect;","map":{"version":3,"sources":["/home/crimemp/Documents/GitHub/doubletapp_test-task/src/InputSelect/index.js"],"names":["React","Component","InputSelect","constructor","props","switchVisibility","setState","isOpen","state","selectOption","option","id","selected","selectedID","label","options","render","display","getOptions","optionsArray","temp","setCheck","concat"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './index.css';\n\nclass InputSelect extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tlabel: this.props.label,\n\t\t\toptions: this.props.options,\n\t\t\tselected: this.props.selected,\n\t\t\tisOpen: false,\n\t\t\tselectedID: -1,\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"input-container\">\n\t\t\t\t<h4>{this.state.label}</h4>\n\t\t\t\t<button className=\"custom-select\" onClick={this.switchVisibility}>{this.state.selected}</button>\n\t\t\t\t<div className=\"options-container\" style={{display: this.state.isOpen ? \"grid\" : \"none\"}}>\n\t\t\t\t\t{this.getOptions()}\n\t\t\t\t</div>\n\t\t\t</div>\t\n\t\t);\n\t}\n\n\tswitchVisibility = () => this.setState({isOpen: !this.state.isOpen});\n\n\tgetOptions() {\n\t\tlet optionsArray = [];\n\t\tfor (let id in this.state.options) {\n\t\t\tlet temp = [];\n\t\t\ttemp = [\n\t\t\t\t<input id={id} className=\"option-input\" type=\"radio\" value={this.state.options.id}></input>,\n\t\t\t\t<label for={id} className=\"option-label\" onClick={() => this.selectOption(this.state.options[id]), id} >\n\t\t\t\t\t{this.state.options[id]}\n\t\t\t\t\t{this.setCheck}\n\t\t\t\t\t</label>\n\t\t\t];\n\n\t\t\toptionsArray = optionsArray.concat(temp);\n\t\t}\n\t\treturn optionsArray;\n\t}\n\n\tselectOption = (option, id) => this.setState({selected: option,\n\t\t\t\t\t\t\t\t\t\t\t\t  selectedID: id})\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tsetCheck() {\n\t\tif (this.state.selectedID != -1) {\n\t\t\treturn <img id=\"checked\" src=\"./images/selected.svg\"></img>\n\t\t}\n\t}\t\t\t\t\t\t\t\t\t\t\t\n\n}\n\nexport default InputSelect"]},"metadata":{},"sourceType":"module"}